{
  "name": "tkot-online-web",
  "description": "Te Kahu o Taonui (TKoT) Online - Website",
  "repository": "https://github.com/Piki-Tech-Social-Enterprise/TKoTOnline",
  "license": "MIT",
  "version": "1.0.0",
  "private": true,
  "dependencies": {
    "axios": "^0.21.0",
    "draftjs-to-html": "^0.9.1",
    "firebase": "^8.1.0",
    "lazysizes": "^5.2.2",
    "moment-mini": "^2.24.0",
    "prop-types": "^15.7.2",
    "query-string": "^6.13.7",
    "react": "17.0.1",
    "react-dom": "17.0.1",
    "react-ga": "^3.2.1",
    "react-helmet": "^6.1.0",
    "react-router": "5.2.0",
    "react-router-dom": "5.2.0",
    "reactstrap": "8.7.1",
    "reactstrap-scrollspy": "^0.1.1",
    "sweetalert2": "^10.10.1"
  },
  "scripts": {
    "updateDependencies": "ncu -x react-scripts,node-sass -u && pnpm i",
    "start": "pnpm run startLocal-p",
    "start:og": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "install:clean": "shx rm -rf node_modules/ && shx rm -rf package-lock.json && pnpm install && pnpm run downloadDevSupportFiles && pnpm start",
    "process-sass": "run-s -sn compile-sass map-sass minify-sass",
    "compile-sass": "run-p -sn now-ui-kit-compile-sass tkot-compile-sass",
    "minify-sass": "run-p -sn now-ui-kit-minify-sass tkot-minify-sass",
    "map-sass": "run-p -sn now-ui-kit-map-sass tkot-map-sass",
    "now-ui-kit-compile-sass": "node-sass src/assets/scss/now-ui-kit.scss src/assets/css/now-ui-kit.css",
    "now-ui-kit-minify-sass": "node-sass src/assets/scss/now-ui-kit.scss src/assets/css/now-ui-kit.min.css --output-style compressed",
    "now-ui-kit-map-sass": "node-sass src/assets/scss/now-ui-kit.scss src/assets/css/now-ui-kit.css --source-map true",
    "tkot-compile-sass": "node-sass src/assets/scss/tkot.scss src/assets/css/tkot.css",
    "tkot-minify-sass": "node-sass src/assets/scss/tkot.scss src/assets/css/tkot.min.css --output-style compressed",
    "tkot-map-sass": "node-sass src/assets/scss/tkot.scss src/assets/css/tkot.css --source-map true",
    "firebaseServe": "firebase serve --port 5000",
    "firebaseDeploy": "firebase deploy -m \"\"\"$REACT_APP_WEB_NAME v$REACT_APP_WEB_BUILD_VERSION\"\"\" --except functions",
    "firebaseUseDev": "firebase use \"tkot-online-dev\"",
    "firebaseUseTest": "firebase use \"tkot-online-test\"",
    "firebaseUseProd": "firebase use \"tkot-online-prod\"",
    "envCmdLocal": "env-cmd -e local run-s -sn",
    "envCmdDev": "env-cmd -e dev run-s -sn",
    "envCmdTest": "env-cmd -e test run-s -sn",
    "envCmdProd": "env-cmd -e prod run-s -sn",
    "envCmdLocal-p": "env-cmd -e local run-p -sn",
    "envCmdDev-p": "env-cmd -e dev run-p -sn",
    "envCmdTest-p": "env-cmd -e test run-p -sn",
    "envCmdProd-p": "env-cmd -e prod run-p -sn",
    "shellFunctions": "cd ../PWA/functions&&pnpm run shell",
    "startLocal": "run-s -sn firebaseUseDev \"envCmdLocal start:og\"",
    "startDev": "run-s -sn firebaseUseDev \"envCmdDev start:og\"",
    "startTest": "run-s -sn firebaseUseTest \"envCmdTest start:og\"",
    "startProd": "run-s -sn firebaseUseProd \"envCmdProd start:og\"",
    "startLocal-p": "run-s -sn firebaseUseDev \"envCmdLocal-p shellFunctions start:og\"",
    "startDev-p": "run-s -sn firebaseUseDev \"envCmdDev-p shellFunctions start:og\"",
    "startTest-p": "run-s -sn firebaseUseTest \"envCmdTest-p shellFunctions start:og\"",
    "startProd-p": "run-s -sn firebaseUseProd \"envCmdProd-p shellFunctions start:og\"",
    "firebaseServeDev": "run-s -sn firebaseUseDev \"envCmdDev cleanBuild firebaseServe\"",
    "firebaseServeTest": "run-s -sn firebaseUseTest \"envCmdTest cleanBuild firebaseServe\"",
    "firebaseServeProd": "run-s -sn firebaseUseProd \"envCmdProd cleanBuild firebaseServe\"",
    "firebaseDeployDev": "run-s -sn firebaseUseDev \"envCmdDev prepareBuild\" \"envCmdDev cleanBuild firebaseDeploy uploadDevSupportFiles\"",
    "firebaseDeployTest": "run-s -sn firebaseUseTest \"envCmdTest prepareBuild\" \"envCmdTest cleanBuild firebaseDeploy uploadDevSupportFiles\"",
    "firebaseDeployProd": "run-s -sn firebaseUseProd \"envCmdProd prepareBuild\" \"envCmdProd cleanBuild firebaseDeploy uploadDevSupportFiles\"",
    "firebaseServeHostingFunctionsOnly": "firebase serve --only hosting,functions",
    "firebaseServeHostingFunctionsOnlyLocal": "run-s -sn firebaseUseDev \"envCmdLocal build firebaseServeHostingFunctionsOnly\"",
    "firebaseServeHostingFunctionsOnlyDev": "run-s -sn firebaseUseDev \"envCmdDev build firebaseServeHostingFunctionsOnly\"",
    "firebaseServeHostingFunctionsOnlyTest": "run-s -sn firebaseUseTest \"envCmdTest build firebaseServeHostingFunctionsOnly\"",
    "firebaseServeHostingFunctionsOnlyProd": "run-s -sn firebaseUseProd \"envCmdProd build firebaseServeHostingFunctionsOnly\"",
    "removeNodeModules": "shx test -e ./node_modules && shx rm -rf ./node_modules && echo \"'node_modules' successfully removed\" || echo \"'node_modules' folder not found\"",
    "removePackageLockJsonFile": "shx test -e ./package-lock.json && shx rm -rf package-lock.json && echo \"'package-lock.json' file successfully removed\" || echo \"'package-lock.json' file not found\"",
    "npmSetProgressOff": "pnpm set progress=false",
    "npmInstall": "pnpm install",
    "cleanInstall": "run-s -sn removeNodeModules removePackageLockJsonFile npmSetProgressOff npmInstall",
    "removeBuild": "shx test -e ./build && shx rm -rf ./build && echo \"'build' folder successfully removed\" || echo \"'build' folder not found\"",
    "cleanBuild": "run-s -sn removeBuild cleanInstall build",
    "uploadDevSupportFiles": "babel-node ./buildUtilities/uploadDevSupportFiles.js",
    "downloadDevSupportFiles": "babel-node ./buildUtilities/downloadDevSupportFiles.js",
    "incrementBuildVer": "babel-node ./buildUtilities/IncrementBuildVersion.js",
    "generateSitemap": "babel-node ./buildUtilities/SitemapGenerator.js",
    "prepareBuild": "run-s -sn incrementBuildVer generateSitemap",
    "firebaseEmulators": "firebase emulators:start --inspect-functions",
    "firebaseEmulatorsLocal": "run-s -sn firebaseUseDev \"envCmdLocal firebaseEmulators\"",
    "firebaseEmulatorsDev": "run-s -sn firebaseUseDev \"envCmdDev firebaseEmulators\"",
    "firebaseEmulatorsTest": "run-s -sn firebaseUseTest \"envCmdTest firebaseEmulators\"",
    "firebaseEmulatorsProd": "run-s -sn firebaseUseProd \"envCmdProd firebaseEmulators\"",
    "firebaseEmulatorsLocal:build": "run-s -sn firebaseUseDev \"envCmdLocal build\"",
    "firebaseEmulatorsDev:build": "run-s -sn firebaseUseDev \"envCmdDev build\"",
    "firebaseEmulatorsTest:build": "run-s -sn firebaseUseTest \"envCmdTest build\"",
    "firebaseEmulatorsProd:build": "run-s -sn firebaseUseProd \"envCmdProd build\"",
    "firebaseEmulatorsLocal:clean": "run-s -sn firebaseUseDev \"envCmdLocal cleanBuild firebaseEmulators\"",
    "firebaseEmulatorsDev:clean": "run-s -sn firebaseUseDev \"envCmdDev cleanBuild firebaseEmulators\"",
    "firebaseEmulatorsTest:clean": "run-s -sn firebaseUseTest \"envCmdTest cleanBuild firebaseEmulators\"",
    "firebaseEmulatorsProd:clean": "run-s -sn firebaseUseProd \"envCmdProd cleanBuild firebaseEmulators\"",
    "firebaseEmulatorFunctions": "firebase emulators:start --only functions --inspect-functions",
    "firebaseEmulatorFunctionsLocal": "run-s -sn firebaseUseDev \"envCmdLocal firebaseEmulatorFunctions\"",
    "firebaseEmulatorFunctionsDev": "run-s -sn firebaseUseDev \"envCmdDev firebaseEmulatorFunctions\"",
    "firebaseEmulatorFunctionsTest": "run-s -sn firebaseUseTest \"envCmdTest firebaseEmulatorFunctions\"",
    "firebaseEmulatorFunctionsProd": "run-s -sn firebaseUseProd \"envCmdProd firebaseEmulatorFunctions\"",
    "uploadDevSupportFilesDev": "run-s -sn firebaseUseDev \"envCmdDev uploadDevSupportFiles\"",
    "uploadDevSupportFilesTest": "run-s -sn firebaseUseTest \"envCmdTest uploadTestSupportFiles\"",
    "uploadDevSupportFilesProd": "run-s -sn firebaseUseProd \"envCmdProd uploadProdSupportFiles\"",
    "downloadDevSupportFilesDev": "run-s -sn firebaseUseDev \"envCmdDev downloadDevSupportFiles\"",
    "downloadDevSupportFilesTest": "run-s -sn firebaseUseTest \"envCmdTest downloadTestSupportFiles\"",
    "downloadDevSupportFilesProd": "run-s -sn firebaseUseProd \"envCmdProd downloadProdSupportFiles\"",
    "preinstall": "npx only-allow pnpm"
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "optionalDependencies": {
    "typescript": "4.1.2"
  },
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-preset-env": "^1.7.0",
    "babel-preset-react": "^6.24.1",
    "babel-register": "^6.26.0",
    "chalk": "^4.1.0",
    "env-cmd": "^10.1.0",
    "node-sass": "^4.14.1",
    "npm-run-all": "^4.1.5",
    "react-router-sitemap": "^1.2.0",
    "react-scripts": "^3.4.3"
  }
}
