{
  "name": "tkot-online-pwa",
  "description": "Te Kahu o Taonui (TKoT) Online - PWA",
  "repository": "https://github.com/Piki-Tech-Social-Enterprise/TKoTOnline",
  "license": "MIT",
  "version": "1.0.0",
  "dependencies": {
    "axios": "^0.19.2",
    "bootstrap": "4.5.0",
    "chart.js": "2.9.3",
    "firebase": "^7.15.5",
    "googleapis": "^52.1.0",
    "history": "4.10.0",
    "node-sass": "4.14.1",
    "perfect-scrollbar": "1.5.0",
    "react": "16.13.1",
    "react-bootstrap-table": "^4.3.1",
    "react-chartjs-2": "2.9.0",
    "react-dom": "16.13.1",
    "react-google-maps": "9.4.5",
    "react-notification-alert": "0.0.12",
    "react-router": "5.2.0",
    "react-router-dom": "5.2.0",
    "react-scripts": "3.4.1",
    "reactstrap": "8.5.1",
    "sweetalert2": "^9.15.2",
    "sweetalert2-react": "^0.8.3"
  },
  "scripts": {
    "start": "npm run startLocal",
    "start:og": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "install:clean": "rm -rf node_modules/ && rm -rf package-lock.json && npm install && npm run downloadDevSupportFiles && npm start",
    "process-sass": "run-s -sn compile-sass map-sass minify-sass",
    "compile-sass": "run-p -sn now-ui-dashboard-compile-sass tkot-compile-sass",
    "minify-sass": "run-p -sn now-ui-dashboard-minify-sass tkot-minify-sass",
    "map-sass": "run-p -sn now-ui-dashboard-map-sass tkot-map-sass",
    "now-ui-dashboard-compile-sass": "node-sass src/assets/scss/now-ui-dashboard.scss src/assets/css/now-ui-dashboard.css",
    "now-ui-dashboard-minify-sass": "node-sass src/assets/scss/now-ui-dashboard.scss src/assets/css/now-ui-dashboard.min.css --output-style compressed",
    "now-ui-dashboard-map-sass": "node-sass src/assets/scss/now-ui-dashboard.scss src/assets/css/now-ui-dashboard.css --source-map true",
    "tkot-compile-sass": "node-sass src/assets/scss/tkot.scss src/assets/css/tkot.css",
    "tkot-minify-sass": "node-sass src/assets/scss/tkot.scss src/assets/css/tkot.min.css --output-style compressed",
    "tkot-map-sass": "node-sass src/assets/scss/tkot.scss src/assets/css/tkot.css --source-map true",
    "firebaseServe": "firebase serve --port 5005",
    "firebaseDeploy": "firebase deploy -m \"\"\"$REACT_APP_PWA_NAME v$REACT_APP_PWA_BUILD_VERSION\"\"\" --except functions",
    "firebaseUseDev": "firebase use \"tkot-online-dev\"",
    "firebaseUseTest": "firebase use \"tkot-online-test\"",
    "firebaseUseProd": "firebase use \"tkot-online-prod\"",
    "envCmdLocal": "env-cmd -e local run-s -sn",
    "envCmdDev": "env-cmd -e dev run-s -sn",
    "envCmdTest": "env-cmd -e test run-s -sn",
    "envCmdProd": "env-cmd -e prod run-s -sn",
    "startLocal": "run-s -sn firebaseUseDev \"envCmdLocal start:og\"",
    "startDev": "run-s -sn firebaseUseDev \"envCmdDev start:og\"",
    "startTest": "run-s -sn firebaseUseTest \"envCmdTest start:og\"",
    "startProd": "run-s -sn firebaseUseProd \"envCmdProd start:og\"",
    "firebaseServeDev": "run-s -sn firebaseUseDev \"envCmdDev cleanBuild firebaseServe\"",
    "firebaseServeTest": "run-s -sn firebaseUseTest \"envCmdTest cleanBuild firebaseServe\"",
    "firebaseServeProd": "run-s -sn firebaseUseProd \"envCmdProd cleanBuild firebaseServe\"",
    "firebaseDeployDev": "run-s -sn firebaseUseDev \"envCmdDev prepareBuild\" \"envCmdDev cleanBuild firebaseDeploy uploadDevSupportFiles\"",
    "firebaseDeployTest": "run-s -sn firebaseUseTest \"envCmdTest prepareBuild\" \"envCmdTest cleanBuild firebaseDeploy uploadDevSupportFiles\"",
    "firebaseDeployProd": "run-s -sn firebaseUseProd \"envCmdProd prepareBuild\" \"envCmdProd cleanBuild firebaseDeploy uploadDevSupportFiles\"",
    "removeNodeModules": "if [[ -d node_modules ]]; then rm -rf node_modules/&&echo \"'node_modules' successfully removed\"; else echo 'node_modules' folder not found; fi",
    "removePackageLockJsonFile": "if [[ -e package-lock.json ]]; then rm -rf package-lock.json&&echo \"'package-lock.json' successfully removed\"; else echo 'build' folder not found; fi",
    "npmSetProgressOff": "npm set progress=false",
    "npmCacheClean": "npm cache clean --force",
    "npmInstall": "npm install",
    "cleanInstall": "run-s -sn removeNodeModules removePackageLockJsonFile npmSetProgressOff npmCacheClean npmInstall",
    "removeBuild": "if [[ -d build ]]; then rm -rf build/&&echo \"'build' successfully removed\"; else echo 'build' not found; fi",
    "cleanBuild": "run-s -sn removeBuild cleanInstall build",
    "uploadDevSupportFiles": "babel-node ./buildUtilities/uploadDevSupportFiles.js",
    "downloadDevSupportFiles": "babel-node ./buildUtilities/downloadDevSupportFiles.js",
    "incrementBuildVer": "babel-node ./buildUtilities/IncrementBuildVersion.js",
    "generateSitemap": "babel-node ./buildUtilities/SitemapGenerator.js",
    "prepareBuild": "run-s -sn incrementBuildVer generateSitemap",
    "firebaseEmulators": "firebase emulators:start --inspect-functions",
    "firebaseEmulatorsLocal": "run-s -sn firebaseUseDev \"envCmdLocal firebaseEmulators\"",
    "firebaseEmulatorsDev": "run-s -sn firebaseUseDev \"envCmdDev firebaseEmulators\"",
    "firebaseEmulatorsTest": "run-s -sn firebaseUseTest \"envCmdTest firebaseEmulators\"",
    "firebaseEmulatorsProd": "run-s -sn firebaseUseProd \"envCmdProd firebaseEmulators\"",
    "firebaseEmulatorsLocal:clean": "run-s -sn firebaseUseDev \"envCmdLocal cleanBuild firebaseEmulators\"",
    "firebaseEmulatorsDev:clean": "run-s -sn firebaseUseDev \"envCmdDev cleanBuild firebaseEmulators\"",
    "firebaseEmulatorsTest:clean": "run-s -sn firebaseUseTest \"envCmdTest cleanBuild firebaseEmulators\"",
    "firebaseEmulatorsProd:clean": "run-s -sn firebaseUseProd \"envCmdProd cleanBuild firebaseEmulators\"",
    "firebaseEmulatorFunctions": "firebase emulators:start --only functions --inspect-functions",
    "firebaseEmulatorFunctionsLocal": "run-s -sn firebaseUseDev \"envCmdLocal firebaseEmulatorFunctions\"",
    "firebaseEmulatorFunctionsDev": "run-s -sn firebaseUseDev \"envCmdDev firebaseEmulatorFunctions\"",
    "firebaseEmulatorFunctionsTest": "run-s -sn firebaseUseTest \"envCmdTest firebaseEmulatorFunctions\"",
    "firebaseEmulatorFunctionsProd": "run-s -sn firebaseUseProd \"envCmdProd firebaseEmulatorFunctions\"",
    "uploadDevSupportFilesDev": "run-s -sn firebaseUseDev \"envCmdDev uploadDevSupportFiles\"",
    "uploadDevSupportFilesTest": "run-s -sn firebaseUseTest \"envCmdTest uploadTestSupportFiles\"",
    "uploadDevSupportFilesProd": "run-s -sn firebaseUseProd \"envCmdProd uploadProdSupportFiles\"",
    "downloadDevSupportFilesDev": "run-s -sn firebaseUseDev \"envCmdDev downloadDevSupportFiles\"",
    "downloadDevSupportFilesTest": "run-s -sn firebaseUseTest \"envCmdTest downloadTestSupportFiles\"",
    "downloadDevSupportFilesProd": "run-s -sn firebaseUseProd \"envCmdProd downloadProdSupportFiles\""
  },
  "optionalDependencies": {
    "@types/googlemaps": "3.39.8",
    "@types/markerclustererplus": "2.1.33",
    "@types/react": "16.9.41",
    "jquery": "3.5.1",
    "typescript": "3.9.5"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-preset-env": "^1.7.0",
    "babel-preset-react": "^6.24.1",
    "babel-register": "^6.26.0",
    "chalk": "^4.1.0",
    "env-cmd": "^10.1.0",
    "npm-run-all": "^4.1.5",
    "react-router-sitemap": "^1.2.0"
  }
}
