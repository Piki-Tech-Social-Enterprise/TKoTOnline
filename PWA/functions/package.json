{
  "name": "tkot-online-functions",
  "description": "Te Kahu o Taonui (TKoT) Online - Functions",
  "repository": "https://github.com/Piki-Tech-Social-Enterprise/TKoTOnline",
  "license": "MIT",
  "version": "1.0.0",
  "dependencies": {
    "@google-cloud/storage": "^5.7.4",
    "cors": "^2.8.5",
    "firebase-admin": "8.13.0",
    "firebase-functions": "^3.13.1",
    "flatted": "^3.1.1",
    "fs-extra": "^8.1.0",
    "googleapis": "^67.0.0",
    "moment": "^2.29.1",
    "nodemailer": "^6.4.17",
    "sharp": "0.25.4"
  },
  "scripts": {
    "updateDependencies": "ncu -x fs-extra,sharp,firebase-admin -u && npm i",
    "lint": "eslint .",
    "test": "mocha --timeout 999999 --colors --reporter spec index.test.js --exit",
    "serveAll": "firebase emulators:start",
    "serve": "firebase emulators:start --only functions",
    "shell": "firebase functions:shell --port 5001",
    "start": "npm run shell",
    "deploy": "firebase deploy -m \"\"\"$REACT_APP_PWA_NAME v$REACT_APP_PWA_BUILD_VERSION\"\"\" --only functions",
    "logs": "firebase functions:log",
    "firebaseUseTest": "firebase use \"tkot-online-test\"",
    "firebaseUseProd": "firebase use \"tkot-online-prod\"",
    "envCmdLocal": "env-cmd -r \"../.env-cmdrc\" -e local run-s -sn",
    "envCmdTest": "env-cmd -r \"../.env-cmdrc\" -e test run-s -sn",
    "envCmdProd": "env-cmd -r \"../.env-cmdrc\" -e prod run-s -sn",
    "applyGAC": "cross-env GOOGLE_APPLICATION_CREDENTIALS=\"$REACT_APP_GAC\"",
    "testLocal": "run-s -sn firebaseUseTest \"envCmdLocal applyGAC test\"",
    "testTest": "run-s -sn firebaseUseTest \"envCmdTest applyGAC test\"",
    "testProd": "run-s -sn firebaseUseProd \"envCmdProd applyGAC test\"",
    "serveLocalAll": "run-s -sn firebaseUseTest \"envCmdLocal applyGAC serveAll\"",
    "serveLocal": "run-s -sn firebaseUseTest \"envCmdLocal applyGAC serve\"",
    "serveTest": "run-s -sn firebaseUseTest \"envCmdTest applyGAC serve\"",
    "serveTestAll": "run-s -sn firebaseUseTest \"envCmdTest applyGAC serveAll\"",
    "serveProd": "run-s -sn firebaseUseProd \"envCmdProd applyGAC serve\"",
    "shellLocal": "run-s -sn firebaseUseTest \"envCmdLocal applyGAC shell\"",
    "shellTest": "run-s -sn firebaseUseTest \"envCmdTest applyGAC shell\"",
    "shellProd": "run-s -sn firebaseUseProd \"envCmdProd applyGAC shell\"",
    "deployTest": "run-s -sn firebaseUseTest \"envCmdTest applyGAC unsetFunctionsConfig setFunctionsConfig deploy\"",
    "deployProd": "run-s -sn firebaseUseProd \"envCmdProd applyGAC unsetFunctionsConfig setFunctionsConfig deploy\"",
    "deployCleanInstallTest": "run-s -sn firebaseUseTest \"envCmdTest cleanInstall applyGAC unsetFunctionsConfig setFunctionsConfig deploy\"",
    "deployCleanInstallProd": "run-s -sn firebaseUseProd \"envCmdProd cleanInstall applyGAC unsetFunctionsConfig setFunctionsConfig deploy\"",
    "removeNodeModules": "shx test -e ./node_modules && shx rm -rf ./node_modules && echo \"'node_modules' successfully removed\" || echo \"'node_modules' folder not found\"",
    "removePackageLockJsonFile": "shx test -e ./package-lock.json && shx rm -rf package-lock.json && echo \"'package-lock.json' file successfully removed\" || echo \"'package-lock.json' file not found\"",
    "npmSetProgressOff": "npm set progress=false",
    "npmInstall": "npm install",
    "cleanInstall": "run-s -sn removeNodeModules removePackageLockJsonFile npmSetProgressOff npmInstall",
    "unsetFunctionsConfig": "babel-node ./buildUtilities/processFunctionsConfig.js unset",
    "setFunctionsConfig": "babel-node ./buildUtilities/processFunctionsConfig.js set"
  },
  "engines": {
    "node": "10"
  },
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-preset-env": "^1.7.0",
    "babel-preset-react": "^6.24.1",
    "babel-register": "^6.26.0",
    "chai": "^4.3.0",
    "chalk": "^4.1.0",
    "cross-env": "^7.0.3",
    "env-cmd": "^10.1.0",
    "eslint": "^7.19.0",
    "eslint-plugin-promise": "^4.2.1",
    "firebase-functions-test": "^0.2.3",
    "mocha": "^8.2.1",
    "npm-run-all": "^4.1.5",
    "sinon": "^9.2.4",
    "sinon-chai": "^3.5.0"
  }
}
